{"ast":null,"code":"var _jsxFileName = \"/Users/lewishollis/Documents/tfl-api/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport './app.css'; // Import the styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StopArrivals = ({\n  stopId,\n  stopName\n}) => {\n  _s();\n  const [arrivals, setArrivals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedStationName, setSelectedStationName] = useState(null);\n  const handleSearch = async query => {\n    try {\n      const response = await fetch(`https://api.tfl.gov.uk/StopPoint/Search?query=${query}`);\n      const data = await response.json();\n\n      // For simplicity, assuming the first result contains the relevant information\n      const firstResult = data.matches[0];\n\n      // Extract the station ID and station name\n      if (firstResult) {\n        setSelectedStationName(firstResult.commonName); // Add this line\n      } else {\n        setSelectedStationName(null); // Add this line\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setSelectedStationName(null); // Add this line\n    }\n  };\n  useEffect(() => {\n    const fetchArrivals = async () => {\n      if (!stopId) {\n        return;\n      }\n      try {\n        setLoading(true);\n        const response = await fetch(`https://api.tfl.gov.uk/StopPoint/${stopId}/Arrivals`);\n        const data = await response.json();\n        setArrivals(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchArrivals();\n  }, [stopId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stop-arrivals-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"station-name\",\n      children: [\"Station: \", selectedStationName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), stopId && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"selected-station-id\",\n      children: [\"Selected Station ID: \", stopId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading arrivals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error fetching arrivals: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), arrivals.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"arrivals-list\",\n      children: arrivals.map(arrival => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"arrival-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"arrival-info\",\n          children: [\"Station Name: \", selectedStationName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"arrival-info\",\n          children: [\"Line: \", arrival.lineName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"arrival-info\",\n          children: [\"Destination: \", arrival.destinationName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"arrival-info\",\n          children: [\"Time to Arrival: \", arrival.timeToStation, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, arrival.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(StopArrivals, \"+0KzKPy9xbB1Jo1OPwvdmVJENX4=\");\n_c = StopArrivals;\nexport default StopArrivals;\nvar _c;\n$RefreshReg$(_c, \"StopArrivals\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","jsxDEV","_jsxDEV","StopArrivals","stopId","stopName","_s","arrivals","setArrivals","loading","setLoading","error","setError","selectedStationName","setSelectedStationName","handleSearch","query","response","fetch","data","json","firstResult","matches","commonName","console","fetchArrivals","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","message","length","map","arrival","lineName","destinationName","timeToStation","id","_c","$RefreshReg$"],"sources":["/Users/lewishollis/Documents/tfl-api/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport './app.css'; // Import the styles\n\nconst StopArrivals = ({ stopId, stopName }) => {\n  const [arrivals, setArrivals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedStationName, setSelectedStationName] = useState(null);\n\n  const handleSearch = async (query) => {\n    try {\n      const response = await fetch(`https://api.tfl.gov.uk/StopPoint/Search?query=${query}`);\n      const data = await response.json();\n\n      // For simplicity, assuming the first result contains the relevant information\n      const firstResult = data.matches[0];\n\n      // Extract the station ID and station name\n      if (firstResult) {\n        setSelectedStationName(firstResult.commonName); // Add this line\n      } else {\n        setSelectedStationName(null); // Add this line\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setSelectedStationName(null); // Add this line\n    }\n  };\n\n  useEffect(() => {\n    const fetchArrivals = async () => {\n      if (!stopId) {\n        return;\n      }\n\n      try {\n        setLoading(true);\n\n        const response = await fetch(`https://api.tfl.gov.uk/StopPoint/${stopId}/Arrivals`);\n        const data = await response.json();\n\n        setArrivals(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchArrivals();\n  }, [stopId]);\n\n  return (\n    <div className=\"stop-arrivals-container\">\n      <h2 className=\"station-name\">Station: {selectedStationName}</h2>\n      <SearchBar onSearch={handleSearch} />\n      {stopId && (\n        <p className=\"selected-station-id\">Selected Station ID: {stopId}</p>\n      )}\n\n      {loading && <p className=\"loading-message\">Loading arrivals...</p>}\n\n      {error && <p className=\"error-message\">Error fetching arrivals: {error.message}</p>}\n\n      {arrivals.length > 0 && (\n        <ul className=\"arrivals-list\">\n          {arrivals.map((arrival) => (\n            <li key={arrival.id} className=\"arrival-item\">\n              <p className=\"arrival-info\">Station Name: {selectedStationName}</p>\n              <p className=\"arrival-info\">Line: {arrival.lineName}</p>\n              <p className=\"arrival-info\">Destination: {arrival.destinationName}</p>\n              <p className=\"arrival-info\">Time to Arrival: {arrival.timeToStation} seconds</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default StopArrivals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}