{"ast":null,"code":"var _jsxFileName = \"/Users/lewishollis/Documents/tfl-api/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StopArrivals = () => {\n  _s();\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [arrivals, setArrivals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSearch = async query => {\n    try {\n      const response = await fetch(`https://api.tfl.gov.uk/StopPoint/Search?query=${query}`);\n      const data = await response.json();\n      const firstResult = data.matches[0];\n      if (firstResult) {\n        setSelectedStationId(firstResult.id);\n      } else {\n        setSelectedStationId(null);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setSelectedStationId(null);\n    }\n  };\n  const fetchArrivals = async () => {\n    if (!selectedStationId) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await fetch(`https://api.tfl.gov.uk/StopPoint/${selectedStationId}/Arrivals`);\n      const data = await response.json();\n      setArrivals(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Initial fetch on component mount\n    fetchArrivals();\n\n    // Set up interval to refresh every 1 minute (adjust as needed)\n    const intervalId = setInterval(() => {\n      fetchArrivals();\n    }, 30000); // 60000 milliseconds = 1 minute\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [selectedStationId]); // Only re-run the effect if selectedStationId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stop-arrivals-container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), selectedStationId && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"selected-station-id\",\n      children: [\"ID: \", selectedStationId, \". Results are refreshed every 30 seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading arrivals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error fetching arrivals: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), arrivals.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"arrivals-list\",\n      children: arrivals.sort((a, b) => a.timeToStation - b.timeToStation).map(arrival => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"arrival-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"station-name\",\n          children: arrival.stationName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"line-name\",\n          children: [\" \", arrival.lineName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"destination-name\",\n          children: [\"Terminates: \", arrival.destinationName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time-to-arrival\",\n          children: [\"Time to Arrival: \", Math.ceil(arrival.timeToStation / 60), \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, arrival.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(StopArrivals, \"8zGlq6LpBDauT3ssxxI8/sp3Gbg=\");\n_c = StopArrivals;\nexport default StopArrivals;\nvar _c;\n$RefreshReg$(_c, \"StopArrivals\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","jsxDEV","_jsxDEV","StopArrivals","_s","selectedStationId","setSelectedStationId","arrivals","setArrivals","loading","setLoading","error","setError","handleSearch","query","response","fetch","data","json","firstResult","matches","id","console","fetchArrivals","intervalId","setInterval","clearInterval","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","message","length","sort","a","b","timeToStation","map","arrival","stationName","lineName","destinationName","Math","ceil","_c","$RefreshReg$"],"sources":["/Users/lewishollis/Documents/tfl-api/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport './App.css';\n\nconst StopArrivals = () => {\n  const [selectedStationId, setSelectedStationId] = useState(null);\n  const [arrivals, setArrivals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSearch = async (query) => {\n    try {\n      const response = await fetch(`https://api.tfl.gov.uk/StopPoint/Search?query=${query}`);\n      const data = await response.json();\n      const firstResult = data.matches[0];\n\n      if (firstResult) {\n        setSelectedStationId(firstResult.id);\n      } else {\n        setSelectedStationId(null);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setSelectedStationId(null);\n    }\n  };\n\n  const fetchArrivals = async () => {\n    if (!selectedStationId) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const response = await fetch(`https://api.tfl.gov.uk/StopPoint/${selectedStationId}/Arrivals`);\n      const data = await response.json();\n\n      setArrivals(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Initial fetch on component mount\n    fetchArrivals();\n\n    // Set up interval to refresh every 1 minute (adjust as needed)\n    const intervalId = setInterval(() => {\n      fetchArrivals();\n    }, 30000); // 60000 milliseconds = 1 minute\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [selectedStationId]); // Only re-run the effect if selectedStationId changes\n\n  return (\n    <div className=\"stop-arrivals-container\">\n      <SearchBar onSearch={handleSearch} />\n      {selectedStationId && (\n        <p className=\"selected-station-id\">ID: {selectedStationId}. Results are refreshed every 30 seconds</p>\n      )}\n\n      {loading && <p className=\"loading-message\">Loading arrivals...</p>}\n\n      {error && <p className=\"error-message\">Error fetching arrivals: {error.message}</p>}\n\n      {arrivals.length > 0 && (\n        <ul className=\"arrivals-list\">\n          {arrivals\n            .sort((a, b) => a.timeToStation - b.timeToStation)\n            .map((arrival) => (\n              <li key={arrival.id} className=\"arrival-card\">\n                <h1 className=\"station-name\">{arrival.stationName}</h1>\n                <p className=\"line-name\"> {arrival.lineName}</p>\n                <p className=\"destination-name\">Terminates: {arrival.destinationName}</p>\n                <p className=\"time-to-arrival\">Time to Arrival: {Math.ceil(arrival.timeToStation / 60)} minutes</p>\n              </li>\n            ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default StopArrivals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}